id: spark-wallet
version: 0.3.2.1
title: Spark Wallet
license: MIT
wrapper-repo: https://github.com/Start9Labs/spark-wallet-wrapper
upstream-repo: https://github.com/shesek/spark-wallet
donation-url: https://btcpay.shesek.info/
marketing-site: https://github.com/shesek/spark-wallet
support-site: https://github.com/shesek/spark-wallet/issues
build: ["make"]
description:
  short: "A minimalistic wallet GUI for Core Lightning (CLN)."
  long: |
    Spark is a minimalistic wallet GUI for Core Lightning (CLN). It supports sending and
    receiving payments, viewing history, and managing channels.

    Spark is a purely off-chain wallet, with no on-chain payments.
    This allows Spark to fully realize the awesome UX enabled by lightning,
    without worrying about the complications and friction of on-chain payments.
release-notes: |
  * Bump CLN version allowance to <22.10
  * Use new eOS rsync backup/restore APIs
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /root/.spark-wallet
    c-lightning: /mnt/c-lightning/shared
  io-format: yaml
health-checks:
  web-ui:
    name: Web UI
    success-message: Spark wallet is ready to visit in a web browser
    type: docker
    image: main
    entrypoint: health-check.sh
    args: ["web"]
    io-format: json
    inject: true
  cli:
    name: Command Interface
    success-message: The command line interface is operational
    type: docker
    image: main
    entrypoint: health-check.sh
    args: ["api"]
    io-format: json
    inject: true
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: /shared
    readonly: true
alerts: {}
interfaces:
  main:
    name: Web Interface
    description: Main user interface for interacting with Spark in a web browser.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: script
  restore:
    type: script
dependencies:
  c-lightning:
    version: ">=0.10.1 <23.10.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: required
    config: ~
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]